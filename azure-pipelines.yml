# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master
- develop

pool:
  vmImage: 'VS2017-Win2016'

variables:
  major: 1
  minor: 0
  # creates a counter called cobieversion and seeds it at 100 and then assigns the value to a variable named patch.
  patch: $[counter('iso12006version', 100)]
  

steps:
# Windows script setting up  $(version) of the nuget package if this is development branch build
- script: |
    echo ##vso[task.setvariable variable=version]$(major).$(minor).$(patch)-prerelease
  name: 'SettingPrereleaseNugetPackageVersion'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
- script: | 
    echo ##vso[task.setvariable variable=version]$(major).$(minor).$(patch)
  name: 'SettingNugetPackageVersion'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

- task: NuGetToolInstaller@0  

# ISO 12006-3 v3 EXPRESS schema
- script: dotnet pack Xbim.ISO_12006_3_V3\Xbim.ISO_12006_3_V3.csproj -c Release -o $(Build.BinariesDirectory) /p:PackageVersion=$(version)
  displayName: 'ISO 12006-3 v3 EXPRESS schema'
  
# ISO 12006-3 v4 EXPRESS schema
- script: dotnet pack Xbim.ISO_12006_3_V4\Xbim.ISO_12006_3_V4.csproj -c Release -o $(Build.BinariesDirectory) /p:PackageVersion=$(version)
  displayName: 'ISO 12006-3 v4 EXPRESS schema'
  
# Copy artifacts and Publish
- task: CopyFiles@2
  displayName: 'Staging Artefacts'
  inputs:
    sourceFolder: '$(Build.BinariesDirectory)'
    contents: '**\*.nupkg' 
    targetFolder: '$(build.artifactstagingdirectory)'
    cleanTargetFolder: true
    
# Publish to master or develop MyGet feed based on the source branch
- task: NuGetCommand@2
  displayName: 'Publishing to MyGet master feed'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'MyGetMaster'
    versioningScheme: byEnvVar
    versionEnvVar: version

- task: NuGetCommand@2
  displayName: 'Publishing to MyGet develop feed'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'MyGetDev'
    versioningScheme: byEnvVar
    versionEnvVar: version
    